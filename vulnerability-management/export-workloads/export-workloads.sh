#!/usr/bin/env bash

# This script pulls workload vulnerabilities in the form of deployments and their
# associated images including image vulnerabilities.
#
# The output is streamed to STDOUT as valid JSON with the schema
#
# [
#   {"result": {"deployment": {...}, "images": [...]}},
#   ...
#   {"result": {"deployment": {...}, "images": [...]}}
# ]
#
# Requires ROX_ENDPOINT and ROX_API_TOKEN environment variables.
# The API token requires read access on images and deployments.

set -euo pipefail

case $1 in
*help)
	echo "$0 [query] [timeout]"
	;;
esac

if [[ -z "${ROX_ENDPOINT}" ]]; then
	echo >&2 "ROX_ENDPOINT must be set"
	exit 1
fi

if [[ -z "${ROX_API_TOKEN}" ]]; then
	echo >&2 "ROX_API_TOKEN must be set"
	exit 1
fi

endpoint=https://${ROX_ENDPOINT#https://}
query=$1
timeout=${2:-0}

curl -sk -H "Authorization: Bearer ${ROX_API_TOKEN}" \
	"${endpoint}/v1/export/vuln-mgmt/workloads?query=$query&timeout=$timeout" |
	# Use `jq -nc --slurp` instead for higher throughput but more memory usage.
	jq -nc --stream "[fromstream(inputs)]"
